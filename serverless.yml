service: todo-list-challenge

frameworkVersion: "3"
custom:
  serverless-offline:
    httpPort: 4000
  serverless-dynamodb:
    start:
      port: 8081
      docker: false
      migrate: true
  tableName: todos-table

plugins:
  - serverless-dynamodb
  - serverless-offline

provider:
  name: aws
  runtime: nodejs20.x
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource:
            - Fn::GetAtt: [TodosTable, Arn]
  environment:
    TODOS_TABLE: ${self:custom.tableName}
    STAGE: ${opt:stage}

functions:
  GetTodoList:
    handler: handlers/read-todolist/index.handler
    description: "Get Todo List Table."
    memorySize: 256
    events:
      - http:
          method: GET
          path: /todo-list

  CreateTodoList:
    handler: handlers/create-todolist/index.handler
    description: "Create a new element in Todo List Table."
    memorySize: 256
    events:
      - http:
          method: POST
          path: /todo-list

  UpdateTodoList:
    handler: handlers/update-todolist/index.handler
    description: "Update an element in Todo List Table."
    memorySize: 256
    events:
      - http:
          method: PUT
          path: /todo-list

  DeleteTodoList:
    handler: handlers/delete-todolist/index.handler
    description: "Delete an element in Todo List Table."
    memorySize: 256
    events:
      - http:
          method: DELETE
          path: /todo-list

resources:
  Resources:
    TodosTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.tableName}
        AttributeDefinitions:
          - AttributeName: "id"
            AttributeType: "S"
        KeySchema:
          - AttributeName: "id"
            KeyType: "HASH"
        BillingMode: PAY_PER_REQUEST
        
